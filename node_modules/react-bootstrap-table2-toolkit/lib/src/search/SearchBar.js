'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _arguments = arguments; /* eslint no-return-assign: 0 */

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var handleDebounce = function handleDebounce(func, wait, immediate) {
  var timeout = void 0;

  return function () {
    var later = function later() {
      timeout = null;

      if (!immediate) {
        func.apply(undefined, _arguments);
      }
    };

    var callNow = immediate && !timeout;

    clearTimeout(timeout);

    timeout = setTimeout(later, wait || 0);

    if (callNow) {
      func.appy(undefined, _arguments);
    }
  };
};

var SearchBar = function SearchBar(_ref) {
  var delay = _ref.delay,
      onSearch = _ref.onSearch,
      className = _ref.className,
      style = _ref.style,
      placeholder = _ref.placeholder,
      searchText = _ref.searchText,
      rest = _objectWithoutProperties(_ref, ['delay', 'onSearch', 'className', 'style', 'placeholder', 'searchText']);

  var input = void 0;
  var debounceCallback = handleDebounce(function () {
    onSearch(input.value);
  }, delay);

  return _react2.default.createElement('input', _extends({
    ref: function ref(n) {
      return input = n;
    },
    type: 'text',
    style: style,
    onKeyUp: function onKeyUp() {
      return debounceCallback();
    },
    className: 'form-control ' + className,
    defaultValue: searchText,
    placeholder: placeholder || SearchBar.defaultProps.placeholder
  }, rest));
};

SearchBar.propTypes = {
  onSearch: _propTypes2.default.func.isRequired,
  className: _propTypes2.default.string,
  placeholder: _propTypes2.default.string,
  style: _propTypes2.default.object,
  delay: _propTypes2.default.number,
  searchText: _propTypes2.default.string
};

SearchBar.defaultProps = {
  className: '',
  style: {},
  placeholder: 'Search',
  delay: 250,
  searchText: ''
};

exports.default = SearchBar;